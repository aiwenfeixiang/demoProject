"""
Django settings for otherDemo project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sentry_sdk

from sentry_sdk.integrations.django import DjangoIntegration


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '2*zcmj_h-*j2h-u51_9u%r)xl&hc+iv7dg9$o#%w+ii+$bv57%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Mine
    'web.apps.WebConfig',
    # ThirtyParty
    'ckeditor',
    'ckeditor_uploader',
    'django_celery_beat',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'otherDemo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'otherDemo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'luffy_plan',
#         'USER': 'root',
#         'PASSWORD': 'root123456',
#         'HOST': '',
#         'PORT': '',
#     },
#     'slave': {
#         'ENGINE': 'django.db.backends.mysql',
#         'USER': 'root',
#         'PASSWORD': 'root123456',
#         'NAME': 'luffy_plan2',
#         'HOST': '',
#         'PORT': '',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

# 用户路径(媒体文件)目录存储
MEDIA_URL = "/media/"

MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "media", )

##########
# SENTRY #
##########
# sentry_sdk.init(
#     dsn="https://d1cd7f0dfa4b4393a2fd8a8de4c5f3da@sentry.io/1552747",
#     integrations=[
#         DjangoIntegration()
#     ]
# )


############
# CKEDITOR #
############

IMAGE_QUALITY = 40

THUMBNAIL_SIZE = (300, 300)

CKEDITOR_UPLOAD_PATH = "image"

CKEDITOR_IMAGE_BACKEND = "pillow"

CKEDITOR_CONFIGS = {
    'default': {
        'skin': 'moono-lisa',  # 主题，可选：moono-lisa moono kama
        # 'uiColor': '#AADC6E',
        # 高度
        'height': 600,
        # 宽度
        'width': "100%",
        # 文件上传路径
        'filebrowserUploadUrl': '/ckeditor/upload/',
        # 工具栏
        'toolbar': (
            ['Format', ],
            ['Bold', 'Italic', 'Underline', 'Strike', '-'],
            ['TextColor', 'BGColor'],
            ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            # ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Print', 'SpellChecker', 'Scayt'],
            ['Undo', 'Redo', '-', 'Find', 'Replace', '-',
             'RemoveFormat', '-', 'Maximize', '-', "CodeSnippet", 'Subscript', 'Superscript'],
            # ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', 'Blockquote'],
            ['Link', 'Unlink', 'Anchor'],
            ['Image', 'Flash', '-', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak'],
            ['div', 'Source', '-', 'Preview', '-', 'Templates'],
        ),
        # 扩展插件
        'extraPlugins': ','.join([
            'codesnippet',  # 代码
            # 'imagepaste',
            'uploadimage',  # 上传图片
            'image2',  # 粘贴式上传图片
            # 'video',
            # 'html5video',
        ]),
    }
}


###########
# LOGGING #
###########

BASE_LOG_DIR = os.path.join(os.path.dirname(BASE_DIR), "log")

if not os.path.exists(BASE_LOG_DIR):
    os.mkdir(BASE_LOG_DIR)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    # 格式
    'formatters': {
        'standard': {
            'format': '[%(asctime)s][%(threadName)s:%(thread)d][task_id:%(name)s][%(filename)s:%(lineno)d]'
                      '[%(levelname)s][%(message)s]'
        },
        'simple': {
            'format': '[%(levelname)s][%(asctime)s][%(filename)s:%(lineno)d]%(message)s'
        },
        'collect': {
            'format': '%(message)s'
        }
    },
    # 过滤器
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    # 处理器
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'default': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',  # 保存到文件，自动切
            'filename': os.path.join(BASE_LOG_DIR, "luffy_info.log"),  # 日志文件
            'maxBytes': 1024 * 1024 * 50,  # 日志大小 50M
            'backupCount': 3,
            'formatter': 'standard',
            'encoding': 'utf-8',
        },
        'error': {
            'level': 'ERROR',
            'class': 'logging.handlers.RotatingFileHandler',  # 保存到文件，自动切
            'filename': os.path.join(BASE_LOG_DIR, "err.log"),  # 日志文件
            'maxBytes': 1024 * 1024 * 50,  # 日志大小 50M
            'backupCount': 5,
            'formatter': 'standard',
            'encoding': 'utf-8',
        },
        'collect': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',  # 保存到文件，自动切
            'filename': os.path.join(BASE_LOG_DIR, "info.log"),
            'maxBytes': 1024 * 1024 * 50,  # 日志大小 50M
            'backupCount': 5,
            'formatter': 'collect',
            'encoding': "utf-8"
        }
    },
    'loggers': {
        '': {
            'handlers': ['default', 'console', 'error'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'collect': {
            'handlers': ['console', 'collect'],
            'level': 'INFO',
        }
    },
}


#########
# EMAIL #
#########

# EMAIL_HOST = "smtp.exmail.qq.com"
# EMAIL_PORT = 465
EMAIL_HOST = "smtp.163.com"
EMAIL_PORT = 25
EMAIL_HOST_USER = "18803561683@163.com"
# xvazehafbcbjbifd  ysvnktnxiocrcaih
# EMAIL_HOST_PASSWORD = "cqnqiizhfioubjfd"
EMAIL_HOST_PASSWORD = ""
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
# EMAIL_USE_SSL = True
EMAIL_SUBJECT_PREFIX = "[LuffyCity] "
# 默认邮件接收方(开发人员，如果代码出现极端异常可进行邮件通知.)
DEFAULT_TO_EMAILS = [
    "404042726@qq.com",
]

# 配置读写分离
# DATABASE_ROUTERS = ['utils.db_router.MasterSlaveDBRouter']

################
# THIRTY PARTY #
################


THIRD_PART_CONFIG = {
    # 阿里云服务配置
    "ALI_YUN": {
        "ACCESS_KEY": "LTAIN7bUf6Nk4BS5",
        "SECRET": "3Ah6D65YeH5HGmQj9IHTSkSafjDd85"
    },
    # 滑动验证码服务配置
    "GEE_TEST": {
        "ACCESS_KEY": "",
        "SECRET": "",
        # 业务配置
        # 是否启用滑动验证码验证组件(True表示启用)
        "VERIFY_STATUS": True,
        # 无需校验的账户白名单, 配置UID即可
        "NOT_VERIFY_LIST": [
            "2ba6b08d53a4fd27057a32537e2d55ae",  # szww
        ]
    },
    # 支付宝支付相关配置
    "ALI_PAY": {
        # 默认使用配置
        "default": {
            "version": "1.0",  # 支付宝支付调用的接口版本(固定值1.0)
            "debug": True,  # 是否启用调试模式(False是正式环境)
            "app_id": "2016081500252288",  # 支付宝分配给开发者的应用ID(启用线上环境请更改),
            "app_private_key_path": os.path.join(BASE_DIR, "fixtures", "app_private_test_2048"),  # APP应用的私钥
            "alipay_public_key_path": os.path.join(BASE_DIR, "fixtures", "alipay_public_test_2048"),  # 支付宝的公钥
            "callback_url": "http://47.94.172.250:33334/api/v1/trade/alipay/",  # 添加回调域名
        },
        # "default": {
        #     "version": "1.0",  # 支付宝支付调用的接口版本(固定值1.0)
        #     "debug": True,  # 是否启用调试模式(False是正式环境)
        #     "app_id": "2016081500252288",  # 支付宝分配给开发者的应用ID(启用线上环境请更改),
        #     "app_private_key_path": "/Users/liuzhichao/DjangoProjects/log/app_private_test_2048",  # APP应用的私钥
        #     "alipay_public_key_path": "/Users/liuzhichao/DjangoProjects/log/alipay_public_test_2048",  # 支付宝的公钥
        #     "callback_url": "http://47.94.172.250:33334/api/v1/trade/alipay/",  # 添加回调域名
        # },
        # 目前针对支付业务进行切换
        "pay": {}
    },
    # 微信配置
    "WX": {
        "app_id": "wxa22d581a68c18b00",
        "secret": "3d392f345458c9924095afe386915dd8",
        "grant_type": "authorization_code",
        "redirect_uri": "",  # 网页授权回调API
        "notify_url": "",
        "mch_id": "",
        "api_key_path": os.path.join(BASE_DIR, "fixtures", "app_private_test_2048"),
        "debug": False,
        "mobile_host": "",
        "extra": {  # 获取获取扩展参数中的appid和secret (测试环境下, 生产环境删除即可)
        }
    },
}
